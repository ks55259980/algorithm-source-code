/** A class that implements the ADT list by using a chain of linked nodes that has a head reference.  @author Frank M. Carrano @author Timothy M. Henry @version 4.0 */public class LList<T> implements ListInterface<T>{	private Node firstNode;            // Reference to first node of chain	private int  numberOfEntries;   	public LList()	{		initializeDataFields();	} // end default constructor      public int getLength()   {      return numberOfEntries;   } // end getLength/*  < Implementations of the public methods add, remove, clear, replace, getEntry,      contains, isEmpty, and toArray go here. >   . . . */   // Returns a reference to the node at a given position.    private Node getNodeAt(int givenPosition)   {//    . . .   } // end getNodeAt   private class Node   {      private T data;      private Node next;//    . . .   } // end Node} // end LList