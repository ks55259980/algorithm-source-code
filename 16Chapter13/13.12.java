public T replace(int givenPosition, T newEntry){   checkInitialization();   if ((givenPosition >= 1) && (givenPosition <= numberOfEntries))   {      assert !isEmpty();      T originalEntry = list[givenPosition];      list[givenPosition] = newEntry;      return originalEntry;   }   else      throw new IndexOutOfBoundsException(                "Illegal position given to replace operation.");} // end replacepublic T getEntry(int givenPosition){   checkInitialization();   if ((givenPosition >= 1) && (givenPosition <= numberOfEntries))   {      assert !isEmpty();      return list[givenPosition];   }   else      throw new IndexOutOfBoundsException(                "Illegal position given to getEntry operation.");} // end getEntry// Version 4.0