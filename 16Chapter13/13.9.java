// Makes room for a new entry at newPosition.// Precondition: 1 <= newPosition <= numberOfEntries + 1;//               numberOfEntries is list's length before addition;//               checkInitialization has been called.private void makeRoom(int newPosition){   assert (newPosition >= 1) && (newPosition <= numberOfEntries + 1);   int newIndex = newPosition;   int lastIndex = numberOfEntries;   // Move each entry to next higher index, starting at end of   // list and continuing until the entry at newIndex is moved   for (int index = lastIndex; index >= newIndex; index--)      list[index + 1] = list[index];}  // end makeRoom// Version 4.0